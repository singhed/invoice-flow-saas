version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: invoice-saas-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set in .env file}
      POSTGRES_DB: ${POSTGRES_DB:-invoicedb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: invoice-saas-redis
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    command: >
      sh -c '
        if [ -n "$REDIS_PASSWORD" ]; then
          redis-server --appendonly yes --requirepass "$REDIS_PASSWORD"
        else
          echo "WARNING: Redis is running without authentication. Set REDIS_PASSWORD in .env for production."
          redis-server --appendonly yes
        fi
      '
    healthcheck:
      test: ['CMD', 'sh', '-c', 'if [ -n "$REDIS_PASSWORD" ]; then redis-cli -a "$REDIS_PASSWORD" ping; else redis-cli ping; fi']
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    container_name: invoice-saas-localstack
    ports:
      - '4566:4566'
      - '4571:4571'
    environment:
      - SERVICES=s3,sqs,sns,secretsmanager
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      # DOCKER_HOST removed for security - no Docker socket access
    volumes:
      - localstack_data:/tmp/localstack
      # Docker socket mount removed for security (prevents container escape)

volumes:
  postgres_data:
  redis_data:
  localstack_data:
